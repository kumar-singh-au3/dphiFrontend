{"version":3,"sources":["container/Home.js","store/actionsConst.js","store/actions/addNotes.js","component/CreateNotes.js","container/Create.js","component/EditNotes.js","component/list.js","component/yearFilter.js","component/MonthFilter.js","component/filter.js","container/View.js","store/actions/deleteNotes.js","App.js","reportWebVitals.js","store/reducers/notes.js","store/index.js","index.js"],"names":["Home","props","to","className","ADD_NOTES","DELETE_NOTES","addNotes","payload","type","actionConst","mapsDispatchToProps","connect","useState","text","onTextChange","moment","date","format","value","onChange","e","target","style","display","onClick","toString","alert","history","push","onCreateEntry","dates","notes","Date","setHours","createEntry","console","log","initialContent","viewScreen","List","sort","onEditScreenChange","deleteNotes","length","href","a","b","map","yearFilter","years","onChangeFilterValue","id","year","name","MonthFilter","val","index","filter","onSortChange","for","marginLeft","Object","keys","Set","fullDate","getFullYear","editScreen","newDates","onDateChange","EditNotes","document","getElementById","getMonth","App","exact","path","component","Create","View","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","createStore","combineReducers","state","action","actionsConst","newObj","ReactDOM","render","StrictMode","store"],"mappings":"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","file":"static/js/main.49e70296.chunk.js","sourcesContent":["import {Link} from \"react-router-dom\";\r\nconst Home=(props)=>{\r\n    return(\r\n        <div>\r\n        <h1>Online Dairy</h1>\r\n        <Link to='/create' className=\"push_button red\">\r\n         Create\r\n         </Link>\r\n         <Link to='/view' className=\"push_button blue\">\r\n         View and Edit\r\n         </Link>\r\n        </div>\r\n    )\r\n}\r\nexport default Home","export const ADD_NOTES = \"ADD_NOTES\";\r\n\r\nexport const DELETE_NOTES = \"DELETE_NOTES\"","import * as actionConst from '../actionsConst';\r\n\r\nconst addNotes =  (payload)=>{\r\n            return {\r\n                type:actionConst.ADD_NOTES,\r\n                payload \r\n            };\r\n}\r\nexport {addNotes}","import React, { useState } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport moment from 'moment'\r\nimport './createNotes.css'\r\nimport {addNotes} from '../store/actions/addNotes';\r\n\r\nconst CreateNotes=(props)=>{\r\n    const [text, onTextChange] =useState(\"\");\r\n    const save=()=>{\r\n        props.addNotes({[props.date.toString()]:text})\r\n        alert('Saved successfully')\r\n        props.history.push('/')\r\n    }\r\n    return(\r\n        <div>\r\n        <h1>CreateNotes for {moment(props.date).format(\"MMMM Do YYYY\")}</h1>\r\n        <textarea\r\n          value={text}\r\n          onChange={(e)=>onTextChange(e.target.value)}\r\n        />\r\n        <div style={{display:'flex'}}>\r\n        <button onClick={save} style={{display:'inline'}} className=\"push_button blue\">\r\n         Save\r\n         </button>\r\n         <button onClick={()=>props.onCreateEntry(false)} style={{display:'inline'}} className=\"push_button red\">\r\n         Go Back\r\n         </button>\r\n         </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapsDispatchToProps = {\r\n    addNotes\r\n}\r\nexport default connect(null,mapsDispatchToProps)(CreateNotes)","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Calendar from \"react-calendar\";\r\nimport { connect } from \"react-redux\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport CreateNotes from \"./../component/CreateNotes\";\r\n\r\nconst Create = (props) => {\r\n  const [date, onChange] = useState(new Date());\r\n  date.setHours(0, 0, 0);\r\n  const [createEntry, onCreateEntry] = useState(false); //this is to switch between calendar page and create notes page\r\n\r\n  const validateDate = () => {\r\n    console.log(\"props.dates\", props.dates);\r\n    if (props.dates[date]) {\r\n      alert(\"Entry to this date already exist either edit or delete it\");\r\n      return;\r\n    }\r\n    onCreateEntry(true);\r\n  };\r\n\r\n  if (createEntry) {\r\n    return <CreateNotes {...props} onCreateEntry={onCreateEntry} date={date} />;\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Choose Date</h1>\r\n      <Calendar onChange={onChange} value={date} />\r\n      <button onClick={validateDate} className=\"push_button blue\">\r\n        Create Entry\r\n      </button>\r\n      <Link to=\"/\" className=\"push_button red\">\r\n        Go Back\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = ({ notes }) => {\r\n  return { dates: notes };\r\n};\r\nexport default connect(mapStateToProps)(Create);\r\n","import React, { useState } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport moment from 'moment'\r\n\r\nimport './createNotes.css'\r\nimport {addNotes} from '../store/actions/addNotes';\r\n\r\nconst CreateNotes=({date,viewScreen,history, initialContent, addNotes})=>{\r\n    const [text, onTextChange] =useState(initialContent);\r\n    const save=()=>{\r\n        addNotes({[date.toString()]:text})\r\n        alert('Saved successfully')\r\n        history.push('/')\r\n    }\r\n    return(\r\n        <div>\r\n        <h1>CreateNotes for {moment(date).format(\"MMMM Do YYYY\")}</h1>\r\n        <textarea\r\n          value={text}\r\n          onChange={(e)=>onTextChange(e.target.value)}\r\n        />\r\n        <div style={{display:'flex'}}>\r\n        <button onClick={save} style={{display:'inline'}} className=\"push_button blue\">\r\n         Save\r\n         </button>\r\n         <button onClick={viewScreen} style={{display:'inline'}} className=\"push_button red\">\r\n         Go Back\r\n         </button>\r\n         </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = ({notes}, {date})=>{\r\n    return {initialContent: notes[date]}\r\n};\r\nconst mapsDispatchToProps = {\r\n    addNotes\r\n}\r\nexport default connect(mapStateToProps,mapsDispatchToProps)(CreateNotes)","\r\nimport moment from 'moment'\r\nconst List=({dates, sort, onEditScreenChange,deleteNotes})=>{\r\n    if(dates.length===0)\r\n    {\r\n        return <a href=\"#\"className=\"tiles\">No entry yet</a>\r\n    }\r\n    if(sort=='newest')\r\n    {\r\n    dates.sort(function(a,b){\r\n        return new Date(b) - new Date(a);\r\n      })\r\n    }\r\n    else{\r\n        dates.sort(function(a,b){\r\n            return new Date(a) - new Date(b);\r\n          })\r\n    }\r\n    return dates.map((date)=>{\r\n        return(\r\n    <div className=\"tiles\" key={date}>\r\n    <a href=\"#\"  \r\n    onClick={()=>{onEditScreenChange(date)}}\r\n    >\r\n    {moment(date).format(\"MMMM Do YYYY\")}\r\n    </a>\r\n    <a href=\"#\" \r\n    onClick={()=>deleteNotes(date)}\r\n     className=\"right\">Delete</a>\r\n    </div>\r\n        )\r\n    })\r\n}\r\nexport default List","const yearFilter = ({ years,onChangeFilterValue }) => {\r\n  console.log(\"all  \", years);\r\n  if (years.length) {\r\n    return (\r\n      <select onChange = {(e)=>onChangeFilterValue(e)}  id=\"year_filter\">\r\n        <option >All</option>;\r\n        {years.map((year) => {\r\n          return <option value={year}>{year}</option>;\r\n        })}\r\n      </select>\r\n    );\r\n  }\r\n  return (\r\n    <select name=\"cars\" id=\"cars\">\r\n      <option value={null}>Empty</option>\r\n    </select>\r\n  );\r\n};\r\nexport default yearFilter;\r\n","const MonthFilter = ({onChangeFilterValue }) => {\r\n   const month =  ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n   return (\r\n      <select id = \"month_filter\" onChange= {(e)=>onChangeFilterValue(e)}>\r\n           <option >All</option>\r\n          {\r\n               month.map((val,index)=>(\r\n                    <option value = {index} >{val}</option>\r\n                ))\r\n          }\r\n      </select>\r\n   )\r\n        }\r\n  export default MonthFilter;\r\n","\r\nimport YearFilter from './yearFilter'\r\nimport MonthFilter from './MonthFilter'\r\nconst filter = ({ sort, onSortChange, years,onChangeFilterValue}) => {\r\n    console.log('years array', years);\r\n  if (sort === \"newest\") {\r\n    sort = \"oldest\";\r\n  } else {\r\n    sort = \"newest\";\r\n  }\r\n  return (\r\n    <div className=\"filter\">\r\n      <label for=\"cars\">Select Year</label>\r\n      <YearFilter\r\n      onChangeFilterValue = {onChangeFilterValue}\r\n      years={years}\r\n       />\r\n       \r\n      <label style={{marginLeft:'20px'}} for=\"cars\">Select Month</label>\r\n      <MonthFilter\r\n      onChangeFilterValue = {onChangeFilterValue}\r\n      //years={years}\r\n       />\r\n\r\n      <a href=\"#\" onClick={() => onSortChange(sort)} className=\"right\">\r\n        Sort by {sort}\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default filter\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { deleteNotes } from \"../store/actions/deleteNotes\";\r\nimport EditNotes from \"./../component/EditNotes\";\r\nimport \"./view.css\";\r\nimport List from \"./../component/list\";\r\nimport Filter from \"./../component/filter\";\r\n\r\nconst View = (props) => {\r\n  const [editScreen, onEditScreenChange] = useState(\"\"); //this is to switch between view page and edit page\r\n  const [sort, onSortChange] = useState(\"newest\");\r\n  const [newDates, onDateChange] = useState(props.dates);\r\n  const viewScreen = () => {\r\n    onEditScreenChange(\"\");\r\n  };\r\n  const { dates, years } = props;\r\n  const onChangeFilterValue = (e) =>\r\n    onDateChange(\r\n      dates.filter(\r\n        (val) =>\r\n          (document.getElementById(\"year_filter\").value ==\r\n            new Date(val).getFullYear() ||\r\n            document.getElementById(\"year_filter\").value == \"All\") &&\r\n          (document.getElementById(\"month_filter\").value ==\r\n            new Date(val).getMonth() ||\r\n            document.getElementById(\"month_filter\").value == \"All\")\r\n      )\r\n    );\r\n\r\n  return (\r\n    <>\r\n      {editScreen ? (\r\n        <EditNotes {...props} date={editScreen} viewScreen={viewScreen} />\r\n      ) : (\r\n        <div className=\"display\">\r\n          <h1>View</h1>\r\n          <Filter\r\n            sort={sort}\r\n            years={years}\r\n            onChangeFilterValue={onChangeFilterValue}\r\n            onSortChange={onSortChange}\r\n          />\r\n          <List\r\n            dates={newDates}\r\n            sort={sort}\r\n            onEditScreenChange={onEditScreenChange}\r\n            deleteNotes={props.deleteNotes}\r\n          />\r\n          <Link to=\"/\" className=\"push_button red\">\r\n            Go Back\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = ({ notes }) => {\r\n  return {\r\n    dates: Object.keys(notes).length ? Object.keys(notes) : [],\r\n    years: Object.keys(notes).length\r\n      ? [\r\n          ...new Set(\r\n            Object.keys(notes).map((fullDate) => {\r\n              return new Date(fullDate).getFullYear();\r\n            })\r\n          ),\r\n        ]\r\n      : [],\r\n  };\r\n};\r\nconst mapsDispatchToProps = {\r\n  deleteNotes,\r\n};\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(View);\r\n","import * as actionConst from '../actionsConst';\r\n\r\nconst deleteNotes =  (payload)=>{\r\n            return {\r\n                type:actionConst.DELETE_NOTES,\r\n                payload //here payload is id\r\n            };\r\n}\r\nexport {deleteNotes}","import { Route, Switch ,Redirect} from 'react-router-dom';\nimport './App.css';\nimport Home from './container/Home'\nimport Create from './container/Create'\nimport View from './container/View'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n      <Route exact path='/' component={Home}/>\n      <Route exact path='/create' component={Create}/>\n      <Route exact path='/view' component={View}/>\n      <Redirect from='*' to='/' />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionsConst from '../actionsConst';\r\n\r\nconst defaultState = {};\r\n\r\nexport default (state=defaultState,action)=>{\r\n    console.log('this is redux state', state,);\r\n    switch(action.type){\r\n        case actionsConst.ADD_NOTES:\r\n            return {...state,...action.payload}\r\n        case actionsConst.DELETE_NOTES:\r\n            const newObj={...state}\r\n            delete newObj[action.payload]\r\n            return newObj\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, combineReducers} from 'redux';\r\nimport notes from './reducers/notes';\r\n\r\nexport default createStore(combineReducers({\r\n    notes\r\n}));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}